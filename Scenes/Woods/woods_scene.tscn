[gd_scene load_steps=9 format=3 uid="uid://bv4xgnbq6dmm1"]

[ext_resource type="Script" path="res://Scenes/Woods/woods_scene_script.gd" id="1_v47ip"]
[ext_resource type="Texture2D" uid="uid://croublavu6k22" path="res://Scenes/Woods/Woods_TileSheet.png" id="2_y3tym"]
[ext_resource type="PackedScene" uid="uid://dwqb4ke3j22bv" path="res://Elements/npcs/runningNPC.tscn" id="2_yhdyq"]
[ext_resource type="PackedScene" uid="uid://crs0r2um5c0bd" path="res://Elements/Witch_Player/witch_player.tscn" id="3_p6ggb"]
[ext_resource type="Texture2D" uid="uid://d3j8k4ii2n3l7" path="res://Scenes/Woods/WitchHutRoof1.png" id="4_2bt8t"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_cmg0v"]
resource_name = "Woods_TileSheet"
texture = ExtResource("2_y3tym")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, -2, 8, -2, 6, 2, 3, 8, 3, 8, -8, -8, -8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 5, 8, -8, -8, -8, -8, 5)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -8, 8, 8, -2, 8, -4, 7, -8, 3, -8, -8)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, -2, 8, -2, 6, 2, 3, 8, 3, 8, -8, -8, -8)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -8, 8, 8, -2, 8, -4, 7, -8, 3, -8, -8)
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -1, 8, -1, 5, 6, -1, 8, -1)
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -6, 8, 8, -8, 8, -8, -6)
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-2, 8, -8, 8, -8, -1, -6, 0, -4, 5)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, 6, 8, 6, -8, -8, -8)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, 8, 8, 8, -8, -6, -8, -6, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-2, -8, 4, -1, 8, -1, 8, 8, -8, 8, -8, -8, -5, -8)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -8, 8, 8, -8, 8, -8, -1, -2, -6, -2, -8)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, 8, 8, 8, -8, -6, -8, -6, 8)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, -8, -8, 8, -8, 8, 8)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, 6, 8, 6, -8, -8, -8)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-2, -8, 4, -1, 8, -1, 8, 8, -8, 8, -8, -8, -5, -8)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -6, 8, 8, -8, 8, -8, -6)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -8, 8, 8, -8, 8, -8, -1, -2, -6, -2, -8)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 3, 4, -1, 1, -4, 0, -8, 8, -8)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 5, 8, -8, -8, -8, -8, 5)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-2, -8, -2, -7, -3, -7, -3, -4, -4, -4, -4, -2, -5, -2, -5, -1, -6, -1, -6, 0, -7, 0, -7, 2, -8, 2, -8, -8)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(2, 3, -2, 5, -2, 8, -8, 8, -8, -8, 8, -8, 8, 3)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 5, 8, 5, 8, -8, -8, -8)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -8, 8, 8, -2, 8, -4, 7, -8, 3, -8, -8)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -1, 8, -1, 5, 6, -1, 8, -1)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-7, -1, -2, 8, -8, 8, -8, -1)
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 8, -2, 8, -2, 6, 2, 3, 8, 3, 8, -8, -8, -8)
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 5, 8, 5, 8, -8, -8, -8)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-2, -8, -2, -7, -3, -7, -3, -4, -4, -4, -4, -2, -5, -2, -5, -1, -6, -1, -6, 0, -7, 0, -7, 2, -8, 2, -8, -8)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(5, 1, 1, -4, 0, -8, 8, -8, 8, 3)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, 5, 8, 5, 8, -8, -8, -8)
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -8, 8, 8, -2, 8, -4, 7, -8, 3, -8, -8)
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 3, 7, 3, 1, -4, 0, -8, 8, -8)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-4, -2, -8, 2, -8, -8, -2, -8)
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
0:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-2, -8, 4, -1, 8, -1, 8, 8, -8, 8, -8, -8, -5, -8)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -6, 8, 8, -8, 8, -8, -6)
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-7, -1, -2, 8, -8, 8, -8, -1)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -1, 8, -1, 5, 5, -1, 8, -1)
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -6, 8, -6)
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -8, 8, 8, -8, 8, -8, -1, -2, -6, -2, -8)
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, -2, -8, 4, -1, 8, -1)
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, -6, 8, 8, -8, 8, -8, -6)
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -1, -4, -4, -2, -8, 8, -8)
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_afj0y"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_cmg0v")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_4o0ui"]
size = Vector2(80, 78)

[node name="WoodsScene" type="Node2D"]
script = ExtResource("1_v47ip")

[node name="TileMap" type="TileMap" parent="."]
scale = Vector2(3.5, 3.5)
tile_set = SubResource("TileSet_afj0y")
format = 2
layer_0/tile_data = PackedInt32Array(0, 196608, 5, 65536, 196608, 5, 131072, 196608, 5, 196608, 196608, 5, 262144, 196608, 5, 327680, 65536, 1, 393216, 458752, 0, 458752, 458752, 1, 524288, 458752, 1, 589824, 0, 0, 655360, 0, 1, 720896, 131072, 6, 786432, 262144, 2, 851968, 131072, 3, 917504, 131072, 4, 983040, 196608, 5, 1048576, 196608, 6, 1114112, 393216, 6, 1179648, 393216, 6, 1245184, 393216, 6, 1310720, 393216, 6, 1376256, 393216, 6, 1441792, 393216, 6, 1, 196608, 5, 65537, 196608, 5, 131073, 196608, 5, 196609, 196608, 5, 262145, 196608, 5, 327681, 65536, 1, 393217, 524288, 0, 458753, 524288, 1, 524289, 0, 1, 589825, 131072, 4, 655361, 65536, 1, 720897, 196608, 6, 786433, 262144, 2, 851969, 458752, 2, 917505, 196608, 5, 983041, 196608, 5, 1048577, 131072, 5, 1114113, 131072, 6, 1179649, 393216, 6, 1245185, 393216, 6, 1310721, 393216, 6, 1376257, 393216, 6, 1441793, 393216, 6, 2, 196608, 5, 65538, 196608, 5, 131074, 196608, 5, 196610, 196608, 5, 262146, 196608, 5, 327682, 196608, 5, 393218, 196608, 5, 458754, 196608, 5, 524290, 196608, 5, 589826, 196608, 5, 655362, 196608, 5, 720898, 524288, 3, 786434, 524288, 1, 851970, 524288, 2, 917506, 196608, 5, 983042, 196608, 5, 1048578, 196608, 5, 1114114, 131072, 5, 1179650, 131072, 6, 1245186, 393216, 6, 1310722, 393216, 6, 1376258, 393216, 6, 1441794, 393216, 6, 3, 196608, 5, 65539, 196608, 5, 131075, 196608, 5, 196611, 196608, 5, 262147, 196608, 5, 327683, 196608, 5, 393219, 196608, 5, 458755, 196608, 5, 524291, 196608, 5, 589827, 196608, 5, 655363, 196608, 5, 720899, 196608, 5, 786435, 196608, 5, 851971, 196608, 5, 917507, 196608, 5, 983043, 196608, 5, 1048579, 196608, 5, 1114115, 196608, 5, 1179651, 196608, 6, 1245187, 393216, 6, 1310723, 393216, 6, 1376259, 393216, 6, 1441795, 393216, 6, 4, 196608, 5, 65540, 196608, 5, 131076, 196608, 5, 196612, 196608, 5, 262148, 196608, 5, 327684, 196608, 5, 393220, 196608, 5, 458756, 196608, 5, 524292, 196608, 5, 589828, 196608, 5, 655364, 196608, 5, 720900, 196608, 5, 786436, 196608, 5, 851972, 196608, 5, 917508, 196608, 5, 983044, 196608, 5, 1048580, 393216, 0, 1114116, 393216, 2, 1179652, 131072, 5, 1245188, 131072, 6, 1310724, 393216, 6, 1376260, 393216, 6, 1441796, 393216, 6, 5, 196608, 5, 65541, 196608, 5, 131077, 196608, 5, 196613, 196608, 5, 262149, 196608, 5, 327685, 196608, 5, 393221, 196608, 5, 458757, 196608, 5, 524293, 196608, 5, 589829, 196608, 5, 655365, 196608, 5, 720901, 196608, 5, 786437, 196608, 5, 851973, 196608, 5, 917509, 196608, 5, 983045, 196608, 5, 1048581, 65536, 2, 1114117, 65536, 0, 1179653, 196608, 5, 1245189, 524288, 3, 1310725, 131072, 6, 1376261, 393216, 6, 1441797, 393216, 6, 6, 196608, 5, 65542, 196608, 5, 131078, 196608, 5, 196614, 196608, 5, 262150, 196608, 5, 327686, 196608, 5, 393222, 196608, 5, 458758, 196608, 5, 524294, 196608, 5, 589830, 196608, 5, 655366, 196608, 5, 720902, 196608, 5, 786438, 196608, 5, 851974, 196608, 5, 917510, 196608, 5, 983046, 393216, 0, 1048582, 131072, 2, 1114118, 131072, 0, 1179654, 393216, 1, 1245190, 458752, 4, 1310726, 524288, 3, 1376262, 131072, 6, 1441798, 393216, 6, 7, 196608, 5, 65543, 196608, 5, 131079, 196608, 5, 196615, 196608, 5, 262151, 196608, 5, 327687, 196608, 5, 393223, 196608, 5, 458759, 196608, 5, 524295, 196608, 5, 589831, 196608, 5, 655367, 196608, 5, 720903, 196608, 5, 786439, 196608, 5, 851975, 196608, 5, 917511, 196608, 5, 983047, 196608, 6, 1048583, 393216, 6, 1114119, 393216, 6, 1179655, 393216, 6, 1245191, 393216, 4, 1310727, 458752, 4, 1376263, 131072, 5, 1441799, 131072, 6, 8, 196608, 5, 65544, 196608, 5, 131080, 196608, 5, 196616, 196608, 5, 262152, 196608, 5, 327688, 196608, 5, 393224, 196608, 5, 458760, 196608, 5, 524296, 196608, 5, 589832, 196608, 5, 655368, 196608, 5, 720904, 196608, 5, 786440, 196608, 5, 851976, 196608, 5, 917512, 196608, 5, 983048, 196608, 6, 1048584, 393216, 6, 1114120, 393216, 6, 1179656, 393216, 6, 1245192, 393216, 6, 1310728, 393216, 4, 1376264, 458752, 4, 1441800, 524288, 3, 9, 196608, 5, 65545, 196608, 5, 131081, 196608, 5, 196617, 196608, 5, 262153, 196608, 5, 327689, 196608, 5, 393225, 196608, 5, 458761, 196608, 5, 524297, 196608, 5, 589833, 196608, 5, 655369, 196608, 5, 720905, 196608, 5, 786441, 196608, 5, 851977, 196608, 5, 917513, 196608, 5, 983049, 196608, 6, 1048585, 393216, 6, 1114121, 393216, 6, 1179657, 393216, 6, 1245193, 393216, 6, 1310729, 393216, 6, 1376265, 196608, 3, 1441801, 196608, 5, 10, 196608, 5, 65546, 196608, 5, 131082, 196608, 5, 196618, 196608, 5, 262154, 196608, 5, 327690, 196608, 5, 393226, 196608, 5, 458762, 196608, 5, 524298, 196608, 5, 589834, 196608, 5, 655370, 196608, 5, 720906, 196608, 5, 786442, 196608, 5, 851978, 196608, 5, 917514, 196608, 5, 983050, 196608, 6, 1048586, 393216, 6, 1114122, 393216, 6, 1179658, 393216, 6, 1245194, 393216, 6, 1310730, 393216, 6, 1376266, 196608, 3, 1441802, 196608, 5, 11, 196608, 5, 65547, 196608, 5, 131083, 196608, 5, 196619, 196608, 5, 262155, 196608, 5, 327691, 196608, 5, 393227, 196608, 5, 458763, 196608, 5, 524299, 196608, 5, 589835, 196608, 5, 655371, 196608, 5, 720907, 196608, 5, 786443, 196608, 5, 851979, 196608, 5, 917515, 196608, 5, 983051, 524288, 3, 1048587, 131072, 6, 1114123, 393216, 6, 1179659, 393216, 6, 1245195, 393216, 6, 1310731, 393216, 6, 1376267, 262144, 3, 1441803, 458752, 4, 12, 196608, 5, 65548, 196608, 5, 131084, 196608, 5, 196620, 196608, 5, 262156, 196608, 5, 327692, 196608, 5, 393228, 196608, 5, 458764, 196608, 5, 524300, 196608, 5, 589836, 196608, 5, 655372, 196608, 5, 720908, 196608, 5, 786444, 196608, 5, 851980, 196608, 5, 917516, 196608, 5, 983052, 196608, 5, 1048588, 524288, 3, 1114124, 131072, 6, 1179660, 393216, 6, 1245196, 393216, 6, 1310732, 393216, 6, 1376268, 393216, 6, 1441804, 262144, 3, 13, 196608, 5, 65549, 196608, 5, 131085, 196608, 5, 196621, 196608, 5, 262157, 196608, 5, 327693, 196608, 5, 393229, 196608, 5, 458765, 196608, 5, 524301, 196608, 5, 589837, 196608, 5, 655373, 196608, 5, 720909, 196608, 5, 786445, 196608, 5, 851981, 196608, 5, 917517, 196608, 5, 983053, 196608, 5, 1048589, 196608, 5, 1114125, 196608, 6, 1179661, 393216, 6, 1245197, 393216, 6, 1310733, 393216, 6, 1376269, 393216, 6, 1441805, 262144, 2, 14, 196608, 5, 65550, 196608, 5, 131086, 196608, 5, 196622, 196608, 5, 262158, 196608, 5, 327694, 196608, 5, 393230, 196608, 5, 458766, 196608, 5, 524302, 196608, 5, 589838, 196608, 5, 655374, 196608, 5, 720910, 196608, 5, 786446, 196608, 5, 851982, 196608, 5, 917518, 196608, 5, 983054, 196608, 5, 1048590, 196608, 5, 1114126, 524288, 3, 1179662, 131072, 6, 1245198, 393216, 6, 1310734, 393216, 6, 1376270, 393216, 6, 1441806, 393216, 6, 15, 196608, 5, 65551, 196608, 5, 131087, 196608, 5, 196623, 196608, 5, 262159, 196608, 5, 327695, 196608, 5, 393231, 196608, 5, 458767, 196608, 5, 524303, 196608, 5, 589839, 196608, 5, 655375, 196608, 5, 720911, 196608, 5, 786447, 196608, 5, 851983, 196608, 5, 917519, 196608, 5, 983055, 196608, 5, 1048591, 196608, 5, 1114127, 196608, 5, 1179663, 196608, 6, 1245199, 393216, 6, 1310735, 393216, 6, 1376271, 393216, 6, 1441807, 393216, 6, 16, 196608, 5, 65552, 196608, 5, 131088, 196608, 5, 196624, 196608, 5, 262160, 196608, 5, 327696, 196608, 5, 393232, 196608, 5, 458768, 196608, 5, 524304, 196608, 5, 589840, 196608, 5, 655376, 196608, 5, 720912, 196608, 5, 786448, 196608, 5, 851984, 196608, 5, 917520, 196608, 5, 983056, 196608, 5, 1048592, 196608, 5, 1114128, 196608, 5, 1179664, 524288, 3, 1245200, 131072, 6, 1310736, 393216, 6, 1376272, 393216, 6, 1441808, 262144, 2, 17, 196608, 5, 65553, 196608, 5, 131089, 196608, 5, 196625, 196608, 5, 262161, 196608, 5, 327697, 196608, 5, 393233, 196608, 5, 458769, 196608, 5, 524305, 196608, 5, 589841, 196608, 5, 655377, 196608, 5, 720913, 196608, 5, 786449, 196608, 5, 851985, 196608, 5, 917521, 196608, 5, 983057, 196608, 5, 1048593, 196608, 5, 1114129, 196608, 5, 1179665, 196608, 5, 1245201, 524288, 3, 1310737, 0, 1, 1376273, 0, 1, 1441809, 0, 2, 18, 196608, 5, 65554, 196608, 5, 131090, 196608, 5, 196626, 196608, 5, 262162, 196608, 5, 327698, 196608, 5, 393234, 196608, 5, 458770, 196608, 5, 524306, 196608, 5, 589842, 196608, 5, 655378, 196608, 5, 720914, 196608, 5, 786450, 196608, 5, 851986, 196608, 5, 917522, 196608, 5, 983058, 196608, 5, 1048594, 196608, 5, 1114130, 196608, 5, 1179666, 196608, 5, 1245202, 196608, 5, 1310738, 196608, 5, 1376274, 196608, 5, 1441810, 524288, 3, 19, 196608, 5, 65555, 196608, 5, 131091, 196608, 5, 196627, 196608, 5, 262163, 196608, 5, 327699, 196608, 5, 393235, 196608, 5, 458771, 196608, 5, 524307, 196608, 5, 589843, 196608, 5, 655379, 196608, 5, 720915, 196608, 5, 786451, 196608, 5, 851987, 196608, 5, 917523, 196608, 5, 983059, 196608, 5, 1048595, 196608, 5, 1114131, 196608, 5, 1179667, 196608, 5, 1245203, 196608, 5, 1310739, 196608, 5, 1376275, 196608, 5, 1441811, 196608, 5, 20, 196608, 5, 65556, 196608, 5, 131092, 196608, 5, 196628, 196608, 5, 262164, 196608, 5, 327700, 196608, 5, 393236, 196608, 5, 458772, 196608, 5, 524308, 196608, 5, 589844, 196608, 5, 655380, 196608, 5, 720916, 196608, 5, 786452, 196608, 5, 851988, 196608, 5, 917524, 196608, 5, 983060, 196608, 5, 1048596, 196608, 5, 1114132, 196608, 5, 1179668, 196608, 5, 1245204, 196608, 5, 1310740, 196608, 5, 1376276, 196608, 5, 1441812, 196608, 5, 21, 196608, 5, 65557, 196608, 5, 131093, 196608, 5, 196629, 196608, 5, 262165, 196608, 5, 327701, 196608, 5, 393237, 196608, 5, 458773, 196608, 5, 524309, 196608, 5, 589845, 196608, 5, 655381, 196608, 5, 720917, 196608, 5, 786453, 196608, 5, 851989, 196608, 5, 917525, 196608, 5, 983061, 196608, 5, 1048597, 196608, 5, 1114133, 196608, 5, 1179669, 196608, 5, 1245205, 196608, 5, 1310741, 196608, 5, 1376277, 196608, 5, 1441813, 196608, 5, 22, 196608, 5, 65558, 196608, 5, 131094, 196608, 5, 196630, 196608, 5, 262166, 196608, 5, 327702, 393216, 6, 393238, 393216, 6, 458774, 196608, 5, 524310, 196608, 5, 589846, 196608, 5, 655382, 196608, 5, 720918, 196608, 5, 786454, 196608, 5, 851990, 196608, 5, 917526, 196608, 5, 983062, 196608, 5, 1048598, 196608, 5, 1114134, 196608, 5, 1179670, 196608, 5, 1245206, 196608, 5, 1310742, 196608, 5, 1376278, 196608, 5, 1441814, 196608, 5, 23, 196608, 5, 65559, 196608, 5, 131095, 196608, 5, 196631, 196608, 5, 262167, 393216, 6, 327703, 393216, 6, 393239, 393216, 6, 458775, 393216, 6, 524311, 196608, 5, 589847, 196608, 5, 655383, 196608, 5, 720919, 196608, 5, 786455, 196608, 5, 851991, 196608, 5, 917527, 196608, 5, 983063, 196608, 5, 1048599, 196608, 5, 1114135, 196608, 5, 1179671, 196608, 5, 1245207, 196608, 5, 1310743, 196608, 5, 1376279, 196608, 5, 1441815, 196608, 5, 24, 196608, 5, 65560, 196608, 5, 131096, 196608, 5, 196632, 196608, 5, 262168, 393216, 6, 327704, 393216, 6, 393240, 393216, 6, 458776, 393216, 6, 524312, 196608, 5, 589848, 196608, 5, 655384, 196608, 5, 720920, 196608, 5, 786456, 196608, 5, 851992, 196608, 5, 917528, 196608, 5, 983064, 196608, 5, 1048600, 196608, 5, 1114136, 196608, 5, 1179672, 196608, 5, 1245208, 196608, 5, 1310744, 196608, 5, 1376280, 196608, 5, 1441816, 196608, 5, 25, 196608, 5, 65561, 196608, 5, 131097, 196608, 5, 196633, 196608, 5, 262169, 393216, 6, 327705, 393216, 6, 393241, 393216, 6, 458777, 393216, 6, 524313, 196608, 5, 589849, 196608, 5, 655385, 196608, 5, 720921, 196608, 5, 786457, 196608, 5, 851993, 196608, 5, 917529, 196608, 5, 983065, 196608, 5, 1048601, 196608, 5, 1114137, 196608, 5, 1179673, 196608, 5, 1245209, 196608, 5, 1310745, 196608, 5, 1376281, 196608, 5, 1441817, 196608, 5, 26, 196608, 5, 65562, 196608, 5, 131098, 196608, 5, 196634, 196608, 5, 262170, 393216, 6, 327706, 393216, 6, 393242, 393216, 6, 458778, 393216, 6, 524314, 196608, 5, 589850, 196608, 5, 655386, 196608, 5, 720922, 196608, 5, 786458, 196608, 5, 851994, 196608, 5, 917530, 196608, 5, 983066, 196608, 5, 1048602, 196608, 5, 1114138, 196608, 5, 1179674, 196608, 5, 1245210, 196608, 5, 1310746, 196608, 5, 1376282, 196608, 5, 1441818, 196608, 5, 27, 196608, 5, 65563, 196608, 5, 131099, 196608, 5, 196635, 196608, 5, 262171, 196608, 5, 327707, 393216, 6, 393243, 393216, 6, 458779, 393216, 6, 524315, 196608, 5, 589851, 196608, 5, 655387, 196608, 5, 720923, 196608, 5, 786459, 196608, 5, 851995, 196608, 5, 917531, 196608, 5, 983067, 196608, 5, 1048603, 196608, 5, 1114139, 196608, 5, 1179675, 196608, 5, 1245211, 196608, 5, 1310747, 196608, 5, 1376283, 196608, 5, 1441819, 196608, 5, 28, 196608, 5, 65564, 196608, 5, 131100, 196608, 5, 196636, 196608, 5, 262172, 393216, 6, 327708, 393216, 6, 393244, 393216, 6, 458780, 196608, 5, 524316, 196608, 5, 589852, 196608, 5, 655388, 196608, 5, 720924, 196608, 5, 786460, 196608, 5, 851996, 196608, 5, 917532, 196608, 5, 983068, 196608, 5, 1048604, 196608, 5, 1114140, 196608, 5, 1179676, 196608, 5, 1245212, 196608, 5, 1310748, 196608, 5, 1376284, 196608, 5, 1441820, 196608, 5, 29, 196608, 5, 65565, 196608, 5, 131101, 196608, 5, 196637, 196608, 5, 262173, 393216, 6, 327709, 393216, 6, 393245, 393216, 6, 458781, 196608, 5, 524317, 196608, 5, 589853, 196608, 5, 655389, 196608, 5, 720925, 196608, 5, 786461, 196608, 5, 851997, 196608, 5, 917533, 196608, 5, 983069, 196608, 5, 1048605, 196608, 5, 1114141, 196608, 5, 1179677, 196608, 5, 1245213, 196608, 5, 1310749, 196608, 5, 1376285, 196608, 5, 1441821, 196608, 5, 30, 196608, 5, 65566, 196608, 5, 131102, 393216, 6, 196638, 393216, 6, 262174, 393216, 6, 327710, 393216, 6, 393246, 196608, 5, 458782, 196608, 5, 524318, 196608, 5, 589854, 196608, 5, 655390, 196608, 5, 720926, 196608, 5, 786462, 196608, 5, 851998, 196608, 5, 917534, 196608, 5, 983070, 196608, 5, 1048606, 196608, 5, 1114142, 196608, 5, 1179678, 196608, 5, 1245214, 196608, 5, 1310750, 196608, 5, 1376286, 196608, 5, 1441822, 196608, 5, 31, 196608, 5, 65567, 393216, 6, 131103, 393216, 6, 196639, 393216, 6, 262175, 393216, 6, 327711, 393216, 6, 393247, 196608, 5, 458783, 196608, 5, 524319, 196608, 5, 589855, 196608, 5, 655391, 196608, 5, 720927, 196608, 5, 786463, 196608, 5, 851999, 196608, 5, 917535, 196608, 5, 983071, 196608, 5, 1048607, 196608, 5, 1114143, 196608, 5, 1179679, 196608, 5, 1245215, 196608, 5, 1310751, 196608, 5, 1376287, 196608, 5, 1441823, 196608, 5, 32, 196608, 5, 65568, 393216, 6, 131104, 393216, 6, 196640, 393216, 6, 262176, 393216, 6, 327712, 393216, 6, 393248, 196608, 5, 458784, 196608, 5, 524320, 196608, 5, 589856, 196608, 5, 655392, 196608, 5, 720928, 196608, 5, 786464, 196608, 5, 852000, 196608, 5, 917536, 196608, 5, 983072, 196608, 5, 1048608, 196608, 5, 1114144, 196608, 5, 1179680, 196608, 5, 1245216, 196608, 5, 1310752, 196608, 5, 1376288, 196608, 5, 1441824, 196608, 5, 33, 196608, 5, 65569, 393216, 6, 131105, 393216, 6, 196641, 393216, 6, 262177, 393216, 6, 327713, 196608, 5, 393249, 196608, 5, 458785, 196608, 5, 524321, 196608, 5, 589857, 196608, 5, 655393, 196608, 5, 720929, 196608, 5, 786465, 196608, 5, 852001, 196608, 5, 917537, 196608, 5, 983073, 196608, 5, 1048609, 196608, 5, 1114145, 196608, 5, 1179681, 196608, 5, 1245217, 196608, 5, 1310753, 196608, 5, 1376289, 196608, 5, 1441825, 196608, 5, 34, 196608, 5, 65570, 196608, 5, 131106, 393216, 6, 196642, 393216, 6, 262178, 196608, 5, 327714, 196608, 5, 393250, 196608, 5, 458786, 196608, 5, 524322, 196608, 5, 589858, 196608, 5, 655394, 196608, 5, 720930, 196608, 5, 786466, 196608, 5, 852002, 196608, 5, 917538, 196608, 5, 983074, 196608, 5, 1048610, 196608, 5, 1114146, 196608, 5, 1179682, 196608, 5, 1245218, 196608, 5, 1310754, 196608, 5, 1376290, 196608, 5, 1441826, 196608, 5, 35, 196608, 5, 65571, 196608, 5, 131107, 196608, 5, 196643, 196608, 5, 262179, 196608, 5, 327715, 196608, 5, 393251, 196608, 5, 458787, 196608, 5, 524323, 196608, 5, 589859, 196608, 5, 655395, 196608, 5, 720931, 196608, 5, 786467, 196608, 5, 852003, 196608, 5, 917539, 196608, 5, 983075, 196608, 5, 1048611, 196608, 5, 1114147, 196608, 5, 1179683, 196608, 5, 1245219, 196608, 5, 1310755, 196608, 5, 1376291, 196608, 5, 1441827, 196608, 5, 36, 196608, 5, 65572, 196608, 5, 131108, 196608, 5, 196644, 196608, 5, 262180, 196608, 5, 327716, 196608, 5, 393252, 196608, 5, 458788, 196608, 5, 524324, 196608, 5, 589860, 196608, 5, 655396, 196608, 5, 720932, 196608, 5, 786468, 196608, 5, 852004, 196608, 5, 917540, 196608, 5, 983076, 196608, 5, 1048612, 196608, 5, 1114148, 196608, 5, 1179684, 196608, 5, 1245220, 196608, 5, 1310756, 196608, 5, 1376292, 196608, 5, 1441828, 196608, 5, 37, 196608, 5, 65573, 196608, 5, 131109, 196608, 5, 196645, 196608, 5, 262181, 196608, 5, 327717, 196608, 5, 393253, 196608, 5, 458789, 196608, 5, 524325, 196608, 5, 589861, 196608, 5, 655397, 196608, 5, 720933, 196608, 5, 786469, 196608, 5, 852005, 196608, 5, 917541, 196608, 5, 983077, 196608, 5, 1048613, 196608, 5, 1114149, 196608, 5, 1179685, 196608, 5, 1245221, 196608, 5, 1310757, 196608, 5, 1376293, 196608, 5, 1441829, 196608, 5, 38, 196608, 5, 65574, 196608, 5, 131110, 196608, 5, 196646, 196608, 5, 262182, 196608, 5, 327718, 196608, 5, 393254, 196608, 5, 458790, 196608, 5, 524326, 196608, 5, 589862, 196608, 5, 655398, 196608, 5, 720934, 196608, 5, 786470, 196608, 5, 852006, 196608, 5, 917542, 196608, 5, 983078, 196608, 5, 1048614, 196608, 5, 1114150, 196608, 5, 1179686, 196608, 5, 1245222, 196608, 5, 1310758, 196608, 5, 1376294, 196608, 5, 1441830, 196608, 5, 39, 196608, 5, 65575, 196608, 5, 131111, 196608, 5, 196647, 196608, 5, 262183, 196608, 5, 327719, 196608, 5, 393255, 196608, 5, 458791, 196608, 5, 524327, 196608, 5, 589863, 196608, 5, 655399, 196608, 5, 720935, 196608, 5, 786471, 196608, 5, 852007, 196608, 5, 917543, 196608, 5, 983079, 196608, 5, 1048615, 196608, 5, 1114151, 196608, 5, 1179687, 196608, 5, 1245223, 196608, 5, 1310759, 196608, 5, 1376295, 196608, 5, 1441831, 196608, 5, 40, 196608, 5, 65576, 196608, 5, 131112, 196608, 5, 196648, 196608, 5, 262184, 196608, 5, 327720, 196608, 5, 393256, 196608, 5, 458792, 196608, 5, 524328, 196608, 5, 589864, 196608, 5, 655400, 196608, 5, 720936, 196608, 5, 786472, 196608, 5, 852008, 196608, 5, 917544, 196608, 5, 983080, 196608, 5, 1048616, 196608, 5, 1114152, 196608, 5, 1179688, 196608, 5, 1245224, 196608, 5, 1310760, 196608, 5, 1376296, 196608, 5, 1441832, 196608, 5)

[node name="RunningNPC" parent="." instance=ExtResource("2_yhdyq")]
position = Vector2(-326, 469)
rotation = 3.14159
node_id = "Deerbyhouse"

[node name="RunningNpc" parent="." instance=ExtResource("2_yhdyq")]
position = Vector2(-194, 670)
node_id = "human"

[node name="WitchPlayer" parent="." instance=ExtResource("3_p6ggb")]
position = Vector2(259, 548)

[node name="Camera2D" type="Camera2D" parent="WitchPlayer"]
visible = false
position = Vector2(19.1429, -25.4286)
scale = Vector2(0.285714, 0.285714)
zoom = Vector2(1.8, 1.8)
limit_left = 0
limit_top = 0
limit_right = 2000
limit_bottom = 1500

[node name="WitchHutRoof" type="Sprite2D" parent="."]
position = Vector2(399, 404)
scale = Vector2(5, 5)
texture = ExtResource("4_2bt8t")

[node name="Witch_Hut_Collision" type="StaticBody2D" parent="."]
position = Vector2(1, 195)

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Witch_Hut_Collision"]
polygon = PackedVector2Array(140, -61, 140, 324, 220, 324, 220, 229, 301, 229, 301, 324, 380, 324, 380, 479, 661, 479, 661, -61)

[node name="Woods_to_Witch_Transition" type="Area2D" parent="."]
position = Vector2(1, 195)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Woods_to_Witch_Transition"]
position = Vector2(260, 268)
shape = SubResource("RectangleShape2D_4o0ui")
debug_color = Color(1, 1, 1, 0.42)

[connection signal="body_entered" from="Woods_to_Witch_Transition" to="." method="_on_woods_to_witch_transition_body_entered"]
